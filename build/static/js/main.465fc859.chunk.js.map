{"version":3,"sources":["context/QuizContext.jsx","components/Home.jsx","components/Quiz.jsx","components/Results.jsx","routes/App.jsx","reportWebVitals.js","index.js"],"names":["QuizContext","createContext","QuizContextProvider","props","useState","questions","setQuestions","rightAnswers","setRightAnswers","useEffect","fetchQuestions","a","fetch","response","json","data","results","Provider","value","deleteFromRightAnswers","question","filter","answer","children","Home","to","Quiz","useContext","indexQuestion","setIndexQuestion","actualQuestion","handleAnswer","userAnswer","dataRightAnswer","correct_answer","isRightAnswer","category","onClick","Results","length","map","q","className","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAEaA,EAAcC,0BAqCZC,EAnCa,SAACC,GAE3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,MACC,IAMH,IAAMA,EAAc,uCAAG,8BAAAC,EAAA,sEACEC,MAAM,sEADR,cACfC,EADe,gBAEFA,EAASC,OAFP,OAEfC,EAFe,OAGrBT,EAAaS,EAAKC,SAClBR,EAAgBO,EAAKC,SAJA,2CAAH,qDAapB,OACE,cAAChB,EAAYiB,SAAb,CAAsBC,MAAS,CAACb,YAAWc,uBAPd,SAACC,GAC9BZ,EAAgBD,EAAac,QAAO,SAAAC,GAAM,OAAIA,EAAOF,WAAaA,OAMCb,gBAAnE,SACGJ,EAAMoB,YCfEC,EAfF,WACX,OACE,gCACE,kEACA,uFACA,oDACA,cAAC,IAAD,CAAMC,GAAG,QAAT,uBCwESC,EA9EF,WAEX,MAA4CC,qBAAW3B,GAAhDK,EAAP,EAAOA,UAAWc,EAAlB,EAAkBA,uBAElB,EAA0Cf,mBAAS,GAAnD,mBAAOwB,EAAP,KAAsBC,EAAtB,KAEMC,EAAiBzB,EAAUuB,GAiB3BG,EAAe,SAACC,IAbA,SAACA,GAErB,IAAMC,EAAkBH,EAAeI,eAEvC,MAAuB,SAApBD,IAA6C,IAAfD,GAEF,UAApBC,IAA8C,IAAfD,GAWrCG,CAAcH,IACjBb,EAAuBW,EAAeV,UAGxCS,EAAiBD,EAAgB,IASnC,OAGE,gCAIGE,EAEC,gCACE,6BAAKA,EAAeM,WAClB,8BACE,4BAAIN,EAAeV,aAEvB,8BAAIQ,EAAgB,EAApB,YACA,wBAAQS,QAAS,WAAON,GAAa,IAArC,kBAGA,wBAAQM,QAAS,WAAON,GAAa,IAArC,sBAOD,KAEgB,KAAlBH,GAAyB,cAAC,IAAD,CAAMH,GAAG,WAAT,gCCpCjBa,G,MA3BC,WAEd,MAAkCX,qBAAW3B,GAAtCK,EAAP,EAAOA,UAAWE,EAAlB,EAAkBA,aAElB,OACE,gCACE,4CACA,+BAAKA,EAAagC,OAAlB,WAEA,6BACGlC,EAAUmC,KAAI,SAAAC,GACb,OAAO,qBAAIC,UAAU,cAAd,UACiB,SAArBD,EAAEP,gBAA6B,sBAAMQ,UAAU,oBAAhB,eACV,UAArBD,EAAEP,gBAA8B,sBAAMQ,UAAU,oBAAhB,eACjC,sBAAMA,UAAU,wBAAhB,SAAyCD,EAAErB,mBAOjD,cAAC,IAAD,CAAMK,GAAG,IAAT,8BCJSkB,EAfH,WACV,OACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtB,IACjC,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,QAAQC,UAAWpB,IACrC,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,WAAWC,UAAWR,YCJnCS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.465fc859.chunk.js","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\n\nexport const QuizContext = createContext(); \n\nconst QuizContextProvider = (props) => {\n\n  const [questions, setQuestions] = useState([]);\n\n  const [rightAnswers, setRightAnswers] = useState([]);\n\n  useEffect(() => {\n    fetchQuestions();\n  }, [])\n\n\n\n\n\n  const fetchQuestions = async () => {\n    const response = await fetch(\"https://opentdb.com/api.php?amount=10&difficulty=hard&type=boolean\")\n    const data = await response.json();\n    setQuestions(data.results)\n    setRightAnswers(data.results)\n  }\n\n  const deleteFromRightAnswers = (question) => {\n    setRightAnswers(rightAnswers.filter(answer => answer.question !== question))\n  }\n\n\n\n  return(\n    <QuizContext.Provider value = {{questions, deleteFromRightAnswers, rightAnswers}}>\n      {props.children}\n    </QuizContext.Provider>\n  )\n\n}\n\nexport default QuizContextProvider;","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to the trivia Challenge!</h1>\n      <p>You will be presented with 10 True or False questions.</p>\n      <p>Can you score 100%?</p>\n      <Link to=\"/quiz\">\n        BEGIN\n      </Link>\n    </div>\n  \n\n  )\n}\n\nexport default Home;","import React, { useContext, useEffect, useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport  {QuizContext} from '../context/QuizContext';\nconst Quiz = () => {\n\n  const {questions, deleteFromRightAnswers} = useContext(QuizContext);\n\n  const [indexQuestion, setIndexQuestion] = useState(0);\n  \n  const actualQuestion = questions[indexQuestion];\n\n\n\n  const isRightAnswer = (userAnswer) => {\n    \n    const dataRightAnswer = actualQuestion.correct_answer;\n  \n    if(dataRightAnswer === \"True\" && userAnswer === true) {\n      return true\n    } else if (dataRightAnswer === \"False\" && userAnswer === false) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const handleAnswer = (userAnswer) => {\n\n    \n\n    if (!isRightAnswer(userAnswer)){  \n      deleteFromRightAnswers(actualQuestion.question);\n    } \n    \n    setIndexQuestion(indexQuestion + 1);\n  }\n  \n\n\n\n\n\n\n  return (  \n\n    \n    <div>\n\n\n\n      {actualQuestion ? (\n\n        <div>\n          <h1>{actualQuestion.category}</h1>\n            <div>\n              <p>{actualQuestion.question}</p>\n            </div>\n          <p>{indexQuestion + 1} of 10</p>\n          <button onClick={() => {handleAnswer(true)}}>\n            True\n          </button>\n          <button onClick={() => {handleAnswer(false)}}>\n            False\n          </button>\n\n          \n        </div>\n\n      ): null }\n\n      {indexQuestion === 10 &&  <Link to=\"/results\"> Go to results</Link> }\n\n    </div>\n\n  )\n\n\n\n  \n}\n\nexport default Quiz;","import React, {useContext} from 'react';\nimport  {QuizContext} from '../context/QuizContext';\nimport { Link } from 'react-router-dom'\nimport Home from './Home';\n\nimport './styles/Results.css'\n\nconst Results = () => {\n\n  const {questions, rightAnswers} = useContext(QuizContext);\n\n  return (\n    <div>\n      <h1>You scored</h1>\n      <h2>{rightAnswers.length} / 10</h2>\n\n      <ul>\n        {questions.map(q => {\n          return(<li className=\"result-item\">\n            {q.correct_answer === \"True\" && <span className=\"result-item--sign\">+</span> }\n            {q.correct_answer === \"False\" && <span className=\"result-item--sign\">-</span> }\n            <span className=\"result-item--question\">{q.question}</span>\n          </li>)\n\n        })}\n      </ul>\n\n      \n      <Link to=\"/\">PLAY AGAIN?</Link>\n\n    </div>\n  )\n}\n\nexport default Results;","import React from 'react'\nimport { BrowserRouter, Route, Switch} from 'react-router-dom'\nimport QuizContextProvider from '../context/QuizContext';\n\nimport Home from '../components/Home';\nimport Quiz from '../components/Quiz';\nimport Results from '../components/Results';\n\n\nconst App = () => {\n  return (\n    <QuizContextProvider>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/quiz\" component={Quiz}/>\n          <Route exact path=\"/results\" component={Results}/>\n        </Switch>\n      </BrowserRouter>\n    </QuizContextProvider>\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './routes/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}